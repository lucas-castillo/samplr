}
return List::create(chain, (double)(acceptances) / (double)(iterations));}')
custom_mcmc <- Rcpp::cppFunction(depends = c("samplr" ,"RcppArmadillo"),'
int fib(){
return 1;
}')
custom_mcmc()
Rcpp::cpp_object_dummy()
?Rcpp::cpp_object_dummy()
samplr::checkStart()
library(samplr)
?samplr
??samplr
library(samplr)
samplr::sampler_mh(1, "norm", c(0,1))
library(samplr)
library(samplr)
customDensity_r <- function(x){
if (x[1] > 0 && x[1] < 3 && x[2] < 0 && x[2] > -3){
return (1)
} else {
return (0)                    }
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
library(samplr)
getDensityGrid
customDensity_r <- function(x){
if (x[1] > 0 && x[1] < 3 && x[2] < 0 && x[2] > -3){
return (1)
} else {
return (0)                    }
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
library(samplr)
customDensity_r <- function(x){
if (x[1] > 0 && x[1] < 3 && x[2] < 0 && x[2] > -3){
return (1)
} else {
return (0)                    }
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
length(names) > 1
names
p_names <- NULL
length(p_names)
customDensity_r <- function(x){
if (x[1] > 0 && x[1] < 3 && x[2] < 0 && x[2] > -3){
return (1)
} else {
return (0)                    }
}
library(samplr)
customDensity_r <- function(x){
if (x[1] > 0 && x[1] < 3 && x[2] < 0 && x[2] > -3){
return (1)
} else {
return (0)                    }
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
map <- ggplot(df) +
geom_raster(mapping = aes(x = x, y = y, fill = density)) +
scale_fill_viridis_c() +
theme_void()
library(ggplot2)
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
map <- ggplot(df) +
geom_raster(mapping = aes(x = x, y = y, fill = density)) +
scale_fill_viridis_c() +
theme_void()
map
customDensity_r <- function(x){
a <- c(0, 0)
b <- c(1, 2)
c <- c(2, 3)
x <- x(0)
y <- x(1)
AB = b - a
AC = c - a
BC = c - b
AP = a - x
BP = b - x
CP = c - x
one = AB %*% AP
two = AC %*% BP
three = BC %*% CP
if ((one > 0 && two > 0 && three > 0) || (one < 0 && two < 0 && three < 0)){
return (1)
} else{
return (0)
}
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
customDensity_r <- function(x){
a <- c(0, 0)
b <- c(1, 2)
c <- c(2, 3)
AB = b - a
AC = c - a
BC = c - b
AP = a - x
BP = b - x
CP = c - x
one = AB %*% AP
two = AC %*% BP
three = BC %*% CP
if ((one > 0 && two > 0 && three > 0) || (one < 0 && two < 0 && three < 0)){
return (1)
} else{
return (0)
}
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
map <- ggplot(df) +
geom_raster(mapping = aes(x = x, y = y, fill = density)) +
scale_fill_viridis_c() +
theme_void()
map
customDensity_r <- function(x){
a <- c(0, 0)
b <- c(2, 0)
c <- c(0, 3)
AB = b - a
AC = c - a
BC = c - b
AP = a - x
BP = b - x
CP = c - x
one = AB %*% AP
two = AC %*% BP
three = BC %*% CP
if ((one > 0 && two > 0 && three > 0) || (one < 0 && two < 0 && three < 0)){
return (1)
} else{
return (0)
}
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
map <- ggplot(df) +
geom_raster(mapping = aes(x = x, y = y, fill = density)) +
scale_fill_viridis_c() +
theme_void()
map
customDensity_r <- function(x){
a <- c(0, 0)
b <- c(2, 0)
c <- c(0, 3)
AB = b - a
AC = c - a
BC = c - b
AP = x - a
BP = x - b
CP = x - c
one = AB %*% AP
two = AC %*% BP
three = BC %*% CP
if ((one > 0 && two > 0 && three > 0) || (one < 0 && two < 0 && three < 0)){
return (1)
} else{
return (0)
}
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
map <- ggplot(df) +
geom_raster(mapping = aes(x = x, y = y, fill = density)) +
scale_fill_viridis_c() +
theme_void()
map
customDensity_r <- function(x){
a <- c(0, 0)
b <- c(2, 0)
c <- c(0, 3)
AB = b - a
AC = c - a
BC = c - b
AP = x - a
BP = x - b
CP = x - c
one = AB %*% AP
two = AC %*% BP
three = BC %*% CP
if ((one > 0 && two > 0 && three > 0) || (one < 0 && two < 0 && three < 0)){
return (1)
} else{
return (0)
}
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
map <- ggplot(df) +
geom_raster(mapping = aes(x = x, y = y, fill = density)) +
scale_fill_viridis_c() +
theme_void()
map
crossP <- function(b, c){
return (b[1]*c[2] - c[1]*b[2])
}
customDensity_r <- function(x){
a <- c(0, 0)
b <- c(2, 0)
c <- c(0, 3)
AB = b-a
BC = b-a
CA = a-c
AP = x-a
BP = x-b
CP = x-c
one = crossP(AB, AP)
two = crossP(BC, BP)
three = crossP(CA, CP)
if ((one > 0 && two > 0 && three > 0) || (one < 0 && two < 0 && three < 0)){
return (1)
} else{
return (0)
}
}
df <- getDensityGrid(c(-5,-5), 20, customDensity = customDensity_r)
map <- ggplot(df) +
geom_raster(mapping = aes(x = x, y = y, fill = density)) +
scale_fill_viridis_c() +
theme_void()
map
library(samplr)
samplr::plot_density(start = c(-5,-5), size = 10, cellsPerRow = 50, names = "norm", params = c(0,1))
samplr::plot_density(start = c(-5,-5), size = 10, cellsPerRow = 50, names = "norm", params = c(0,1))
library(samplr)
samplr::plot_density(start = c(-5,-5), size = 10, cellsPerRow = 50, names = "norm", params = c(0,1))
samplr::plot_density(start = c(-5,-5), size = 10, cellsPerRow = 50, names = "truncnorm", params = c(0,1, 0, 1))
.checkNamesMatchParams("norm", c(0,1))
custom_uni <- function(x){
if (x < 6 || x> 3){
return(0)
} else{
return (1)
}
}
curve(custom_uni(x))
curve(custom_uni(x))
hist()
hist(1)
curve(custom_uni(x))
h <- Vectorize(custom_uni); curve(h, 0, 2)
h <- Vectorize(custom_uni); curve(h, 0, 2)
h <- Vectorize(custom_uni); curve(h)
h <- Vectorize(custom_uni); curve(h)
h <- Vectorize(custom_uni); curve(h, -5, 5)
h <- Vectorize(custom_uni); curve(h, -5, 100)
custom_uni <- function(x){
if (x < 6 || x > 3){
return(0)
} else{
return (1)
}
}
custom_uni <- function(x){
if (x < 6 || x > 3){
return(1)
} else{
return (0)
}
}
h <- Vectorize(custom_uni); curve(h, -5, 100)
h <- Vectorize(custom_uni); curve(h, -5, 4)
if (x < -6 || x > 3){
return(0)
} else{
return (1)
}
custom_uni <- function(x){
if (x < -6 || x > 3){
return(0)
} else{
return (1)
}
}
custom_uni <- function(x){
if (x < -6 || x > 3){
return(0)
} else{
return (1)
}
}
h <- Vectorize(custom_uni); curve(h, -5, 4)
h <- Vectorize(custom_uni); curve(h, -10, 4)
custom_uni <- function(x){
if (x < -6 || x > 3){
return(0)
} else{
return (1)
}
}
h <- Vectorize(custom_uni); curve(h, -10, 4)
4
h <- Vectorize(custom_uni); curve(h, -6, 3)
custom_uni <- function(x){
if (x < -6 || x > 3){
return(0)
} else{
return (1)
}
}
h <- Vectorize(custom_uni); curve(h, -6, 3)
library(samplr)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(0,1), diag(2)), list(c(2,1), diag(2)))
)
library(samplr)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(0,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(0,1), diag(2)), list(c(2,1), diag(2)))
)
library(samplr)
samplr::plot_2d_density(c(-5, -5), 10, names = c("mvnorm", "mvnorm"), params = list(c(-1, 1), diag(2)))
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(0,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(0,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(-5,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(-3,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(-2,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 15, names = c("mvnorm", "mvnorm"),
params = list(list(c(-2,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, names = c("mvnorm", "mvnorm"),
params = list(list(c(-2,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, cellsPerRow = 100, names = c("mvnorm", "mvnorm"),
params = list(list(c(-2,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, cellsPerRow = 200, names = c("mvnorm", "mvnorm"),
params = list(list(c(-2,1), diag(2)), list(c(2,1), diag(2)))
)
samplr::plot_2d_density(
c(-5, -5), 10, cellsPerRow = 2000, names = c("mvnorm", "mvnorm"),
params = list(list(c(-2,1), diag(2)), list(c(2,1), diag(2)))
)
devtools::document()
?devtools::document
devtools::document()
library(samplr)
samplr::sampler_mh(1, "norm", c(0,1))
customDensity_r <- function(x){
if (x[1] > 0 && x[1] < 3 && x[2] < 0 && x[2] > -3){
return (1)
} else {
return (0)                    }
}
plot_2d_density(start = c(-5,5), size = 10, customDensity = customDensity_r)
plot_2d_density(start = c(-5,5), size = 10, customDensity = customDensity_r)
library(samplr)
plot_2d_density(start = c(-5,5), size = 10, customDensity = customDensity_r)
customDensity_r <- function(x){
if (x[1] > 0 && x[1] < 3 && x[2] < 0 && x[2] > -3){
return (1)
} else {
return (0)                    }
}
plot_2d_density(start = c(-5,5), size = 10, customDensity = customDensity_r)
plot_2d_density(start = c(-5,-5), size = 10, customDensity = customDensity_r)
plot_2d_density(start = c(-2,-2), size = 5, customDensity = customDensity_r)
plot_2d_density(start = c(-2,-4), size = 5, customDensity = customDensity_r)
plot_2d_density(start = c(0,-4), size = 5, customDensity = customDensity_r)
plot_2d_density(start = c(0,-4), size = 3, customDensity = customDensity_r)
plot_2d_density(start = c(0,-4), size = 4, customDensity = customDensity_r)
plot_2d_density(start = c(0,-4), size = 5, customDensity = customDensity_r)
plot_2d_density(start = c(0,-4), size = 5, customDensity = customDensity_r)
devtools::document()
devtools::document()
library(samplr)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(samplr)
devtools::document()
devtools::check()
.Last.error.trace
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(samplr)
library(ggplot2)
set.seed(1)
# Create a matrix with the means of 15 different Gaussians
names <- rep("mvnorm", 15)
parameters <- list()
for (i in 1:15){
parameters[[i]] <- list(runif(2) * 18 - 9, diag(2))
}
weights <- runif(15)
weights <- weights / rep(sum(weights), 15)
hill_map <- plot_2d_density(names, parameters, weights, start = c(-10,-10), size = 20, cellsPerRow = 150)
print(hill_map)
hill_map <- plot_2d_density(start = c(-10,-10), size = 20, cellsPerRow = 150, names, parameters, weights)
print(hill_map)
devtools::document()
devtools::build_vignettes()
pkgdown::build_site()
devtools::build_readme()
pkgdown::build_home()
devtools::check()
?usethis::use_mit_license()
usethis::use_mit_license()
install.packages("qpdf")
USETHIS??
??usethis
usethis::use_package_doc()
devtools::document()
devtools::check()
library(samplr)
devtools::check()
library(samplr)
library(samplr)
devtools::document()
devtools::check()
a <- 1:7
a
sample(a, size = 7)
sample(a, size = 7)
sample(a, size = 7)
sample(a, size = 7)
library(samplr)
usethis::edit_r_buildignore()
usethis::edit_r_buildignore("samplr")
usethis::edit_r_buildignore(project = "samplr")
usethis::edit_r_buildignore("project")
df <- data.frame(x = xxRange, y = yyRange, density = density)
xRange <- seq(from = start[1], to = start[1] + size, length.out = cellsPerRow)
start = c(-5,-5)
size = 10
cellsPerRow = 50
names = "mvnorm"
params = list(c(0,0), diag(2))
xRange <- seq(from = start[1], to = start[1] + size, length.out = cellsPerRow)
xxRange <- rep(xRange, cellsPerRow)
yRange <- seq(from = start[2], to = start[2] + size, length.out = cellsPerRow)
for (i in 1:cellsPerRow){
if (i == 1){
yyRange <- rep(yRange[i], cellsPerRow)
} else {
yyRange <- c(yyRange, rep(yRange[i], cellsPerRow))
}
}
density = xxRange
df <- data.frame(x = xxRange, y = yyRange, density = density)
map <- ggplot2::ggplot(df) +
ggplot2::geom_raster(mapping = ggplot2::aes(x = df$x, y = df$y, fill = df$density)) +
ggplot2::scale_fill_viridis_c() +
ggplot2::theme_void()
map
?data.frame
devtools::check()
version
devtools::check()
devtools::build_manual()
devtools::build_vignettes()
help("package.skeleton-methods")
??"package.skeleton-methods"
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
r cmd build
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::initialize()
Rcpp::show()
?use_rcpp
library(samplr)
pkgdown::build_site()
?Rcpp::compileAttributes
library(samplr)
usethis?
usthis
?usethis
.Call(`_samplr_sampler_hmc_cpp`, start, distr_name, distr_params, epsilon, L, iterations, isMix, weights, custom_func, useCustom)
sampler_hmc_cpp
samplr::sampler_hmc_cpp
?Rcpp::compileAttributes()
Rcpp::compileAttributes(verbose = TRUE)
devtools::build()
usethis::browse_github_actions("pkgdown")
usethis::use_github_action("pkgdown")
devtools::check()
?.Call
?.Call
